<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Tech Blog]]></title>
  <link href="http://blog.balakiriev.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://blog.balakiriev.com/"/>
  <updated>2014-01-26T22:20:00+01:00</updated>
  <id>http://blog.balakiriev.com/</id>
  <author>
    <name><![CDATA[Aleksandr Balakiriev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Show generated SQL in Rails 3 console]]></title>
    <link href="http://blog.balakiriev.com/blog/2013/10/05/show-generated-sql-in-rails-3-console/"/>
    <updated>2013-10-05T00:14:00+02:00</updated>
    <id>http://blog.balakiriev.com/blog/2013/10/05/show-generated-sql-in-rails-3-console</id>
    <content type="html"><![CDATA[<p>Have you ever wanted to see the resulting SQL of a query in Rails console? Well, unfortunately there&rsquo;s not really an &lsquo;easy&rsquo; way to do this, other than hacking the console, so here we go.</p>

<!-- more -->


<p>Fire up your Rails console. I&rsquo;m using Rails 3, but this should would in &lt;3:</p>

<p>```bash
$ rails c
Loading development environment (Rails 3.0.7)</p>

<blockquote><blockquote><p>_
```</p></blockquote></blockquote>

<p>Cool, awesome, great. Now, we need to tell Rails console that we want to show what&rsquo;s being logged:</p>

<p>```bash
$ rails c
Loading development environment (Rails 3.0.7)</p>

<blockquote><blockquote><p>ActiveRecord::Base.logger = Logger.new(STDOUT)
```</p></blockquote></blockquote>

<p>We are creating a new instance of the <code>ActiveRecord::Base#logger</code> class. Normally, you would specify this as a file (for example, if you were performing an AR operation that you wanted to log separately from Application logs):</p>

<p><code>ruby
ActiveRecord::Base.logger = Logger.new('./logs/custom_log.log')
</code>
But in this case, we are simply &ldquo;writing&rdquo; to <code>STDOUT</code>. Now, when you run a query, you should see the supplemental query just as if you were viewing your development server logs!</p>
]]></content>
  </entry>
  
</feed>
